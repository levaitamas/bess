syntax = "proto3";

package bess.pb;

/**
 * FractionalBuffer accepts packets and stores them; it may forward
 * them to the next module only after it has received `size` number of
 * packets.
 *
 * __Input Gates__: 1
 * __Output Gates__: 1
 */
message FractionalBufferArg {
  uint32 size = 1; /// Size of the buffer. If size=0, buffering is
		   /// bypassed.
}
/**
 * FractionalBuffer has a function `set_size(...)` that allows
 * specifying the number of packets to receive before forwarding them.
 */
message FractionalBufferCommandSetSizeArg {
  uint32 size = 1; /// Size of the buffer. If size=0, buffering is
		   /// bypassed.
}
/**
 * FractionalBuffer has a function `get_size()` that return a
 * FractionalBufferCommandGetSizeResponse.
 */

message FractionalBufferCommandGetSizeArg {}
/**
 * FractionalBuffer has a function `get_size()` that allows querying
 * the number of packets to receive before forwarding them.
 */
message FractionalBufferCommandGetSizeResponse {
  uint32 size = 1; /// Size of the buffer. If size=0, buffering is
		   /// bypassed.
}
